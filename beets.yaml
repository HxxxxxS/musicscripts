directory: /music
library: /music/.beet/library.db
threaded: yes
bell: yes

plugins: [
    ### autotagger extentions ###
    # chroma,
    discogs,
    ### metadata plugins ###
    acousticbrainz,
    # embedart,
    fetchart,
    ftintitle,
    # mbsync,
    # lyrics,
    # scrub,
    ### path format plugins ###
    duplicates,
    # bucket,
    inline,
    the,
    ### interoperability plugins ###
    # badfiles,
    ### misc plugins ###
    missing,
    info,
    convert,
    # web,
    # ihate,
    # filefilter,
    ### other plugins ###
    # embyupdate,
]

import:
    move: no
    copy: yes
    rename: yes
    write: yes
    autotag: yes  
    incremental: yes
    #incremental_skip_later: yes
    resume: yes
    duplicate_action: ask
    none_rec_action: ask
    #duplicate_action: skip
    #none_rec_action: skip
    log: /music/.beet/import.log

match:
    strong_rec_thresh: 0.05

art_filename: cover
per_disc_numbering: yes

paths:
    roughguide:true: _roughguide/%if{$c_original_year,$c_original_year - }$album$aunique/$trackinfo$title
    default: sorted/%the{$albumartist}/%if{$c_original_year,$c_original_year - }$album$aunique/$trackinfo$title
    singleton: singles/$artist - %if{$c_original_year,$c_original_year - }$title
    comp: sorted/Various Artists/%if{$c_original_year,$c_original_year - }$album$aunique/$trackinfo$title
    albumtype:soundtrack: _soundtracks/%if{$c_original_year,$c_original_year - }$album$aunique/$trackinfo$title

item_fields:
    c_original_year: original_year if original_year != None and original_year != 0 else year if year != None and year != 0 else ''
    multidisc: 1 if disctotal > 1 else 0
    aunique: |
                c_original_year = original_year if original_year != None and original_year != 0 else year if year != None and year != 0 else ''
                s = ' '
                if albumdisambig != None and albumdisambig.strip() != '':
                  s += u'(%02s)' % albumdisambig
                if c_original_year != year and c_original_year != 0 and str(c_original_year).strip() != '':
                  s += u'[%02s]' % year
                if format != None and format.strip() != '':
                  s += u'(%02s)' % format
                if catalognum != None and str(catalognum).strip() != '' and catalognum != '[none]':
                  if catalognum.replace(' ', '').lower().find('self-released') == -1:
                    s += u'{%02s}' % catalognum
                elif label != None and label.strip() != '' and label != '[none]' and label != '[no label]':
                  if catalognum.replace(' ', '').lower().find('notonlabel') == -1:
                    s += u'{%02s}' % label
                if s.strip() != '':
                  return s
    trackinfo: |
                s = ''
                if disctotal > 1:
                  s += '%02d' % disc + '-'
                s += '%02d' % track + ' - '
                if disctitle != None and disctitle.strip() != '' and str(disctitle.strip()) != str(disc):
                  s += disctitle + ' - '
                return s
    roughguide: |
                if album.replace(' ', '').lower().find('roughguide') > -1 and albumartist == 'Various Artists':
                  return True

duplicates:
    tag: beetdupe=1
    tiebreak:
        items: [bitrate]
    #album: yes
    #format: '$artist - $album - $bitrate $format'
    format: '$path'
    count: yes

convert:
    dest: /music/lofi/
    never_convert_lossy_files: yes
    format: ogg
    paths:
        default: %the{$albumartist} - %if{$c_original_year,$c_original_year - }$album%if{$c_original_year!=$year, [$year]}%if{$catalognum, $catalognum,%if{$label, $label}}/$trackinfo$title
        singleton: $artist - %if{$c_original_year,$c_original_year - }$title
        comp: Various Artists - %if{$c_original_year,$c_original_year - }$album%if{$c_original_year!=$year, [$year]}%if{$catalognum, $catalognum,%if{$label, $label}}/$trackinfo$title

discogs:
    user_token: x

fetchart:
    sources: filesystem coverart amazon albumart fanarttv wikipedia amazon google
    google_key: x
    fanarttv_key: x
